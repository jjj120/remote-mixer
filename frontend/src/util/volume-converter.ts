// Got dB-Values from Yamaha MIDI Protocol for 01V96V2
// https://usa.yamaha.com/files/download/other_assets/4/311524/01v96v2_midiptcl100.zip
// these values are for the low resolution input (0-255), not for the high resolution one (0-1024)
const dBValues = [
  -Infinity, // 0
  -Infinity, // 1
  -96.0, // 2
  -90.0, // 3
  -85.0, // 4
  -80.0, // 5
  -75.0, // 6
  -70.0, // 7
  -65.0, // 8
  -60.0, // 9
  -55.0, // 10
  -50.0, // 11
  -49.17, // 12
  -48.33, // 13
  -47.5, // 14
  -46.67, // 15
  -45.83, // 16
  -45.0, // 17
  -44.17, // 18
  -43.33, // 19
  -42.5, // 20
  -41.67, // 21
  -40.83, // 22
  -40.0, // 23
  -39.5, // 24
  -39.0, // 25
  -38.5, // 26
  -38.0, // 27
  -37.5, // 28
  -37.0, // 29
  -36.5, // 30
  -36.0, // 31
  -35.5, // 32
  -35.0, // 33
  -34.5, // 34
  -34.0, // 35
  -33.5, // 36
  -33.0, // 37
  -32.5, // 38
  -32.0, // 39
  -31.5, // 40
  -31.0, // 41
  -30.5, // 42
  -30.0, // 43
  -29.72, // 44
  -29.44, // 45
  -29.17, // 46
  -28.89, // 47
  -28.61, // 48
  -28.33, // 49
  -28.06, // 50
  -27.78, // 51
  -27.5, // 52
  -27.22, // 53
  -26.94, // 54
  -26.67, // 55
  -26.39, // 56
  -26.11, // 57
  -25.83, // 58
  -25.56, // 59
  -25.28, // 60
  -25.0, // 61
  -24.72, // 62
  -24.44, // 63
  -24.17, // 64
  -23.89, // 65
  -23.61, // 66
  -23.33, // 67
  -23.06, // 68
  -22.78, // 69
  -22.5, // 70
  -22.22, // 71
  -21.94, // 72
  -21.67, // 73
  -21.39, // 74
  -21.11, // 75
  -20.83, // 76
  -20.56, // 77
  -20.28, // 78
  -20.0, // 79
  -19.81, // 80
  -19.62, // 81
  -19.42, // 82
  -19.23, // 83
  -19.04, // 84
  -18.85, // 85
  -18.65, // 86
  -18.46, // 87
  -18.27, // 88
  -18.08, // 89
  -17.88, // 90
  -17.69, // 91
  -17.5, // 92
  -17.31, // 93
  -17.12, // 94
  -16.92, // 95
  -16.73, // 96
  -16.54, // 97
  -16.35, // 98
  -16.15, // 99
  -15.96, // 100
  -15.77, // 101
  -15.58, // 102
  -15.38, // 103
  -15.19, // 104
  -15.0, // 105
  -14.87, // 106
  -14.74, // 107
  -14.61, // 108
  -14.47, // 109
  -14.34, // 110
  -14.21, // 111
  -14.08, // 112
  -13.95, // 113
  -13.82, // 114
  -13.68, // 115
  -13.55, // 116
  -13.42, // 117
  -13.29, // 118
  -13.16, // 119
  -13.03, // 120
  -12.89, // 121
  -12.76, // 122
  -12.63, // 123
  -12.5, // 124
  -12.37, // 125
  -12.24, // 126
  -12.11, // 127
  -11.97, // 128
  -11.84, // 129
  -11.71, // 130
  -11.58, // 131
  -11.45, // 132
  -11.32, // 133
  -11.18, // 134
  -11.05, // 135
  -10.92, // 136
  -10.79, // 137
  -10.66, // 138
  -10.53, // 139
  -10.39, // 140
  -10.26, // 141
  -10.13, // 142
  -10.0, // 143
  -9.86, // 144
  -9.72, // 145
  -9.58, // 146
  -9.44, // 147
  -9.31, // 148
  -9.17, // 149
  -9.03, // 150
  -8.89, // 151
  -8.75, // 152
  -8.61, // 153
  -8.47, // 154
  -8.33, // 155
  -8.19, // 156
  -8.06, // 157
  -7.92, // 158
  -7.78, // 159
  -7.64, // 160
  -7.5, // 161
  -7.36, // 162
  -7.22, // 163
  -7.08, // 164
  -6.94, // 165
  -6.81, // 166
  -6.67, // 167
  -6.53, // 168
  -6.39, // 169
  -6.25, // 170
  -6.11, // 171
  -5.97, // 172
  -5.83, // 173
  -5.69, // 174
  -5.56, // 175
  -5.42, // 176
  -5.28, // 177
  -5.14, // 178
  -5.0, // 179
  -4.82, // 180
  -4.64, // 181
  -4.46, // 182
  -4.29, // 183
  -4.11, // 184
  -3.93, // 185
  -3.75, // 186
  -3.57, // 187
  -3.39, // 188
  -3.21, // 189
  -3.04, // 190
  -2.86, // 191
  -2.68, // 192
  -2.5, // 193
  -2.32, // 194
  -2.14, // 195
  -1.96, // 196
  -1.79, // 197
  -1.61, // 198
  -1.43, // 199
  -1.25, // 200
  -1.07, // 201
  -0.89, // 202
  -0.71, // 203
  -0.54, // 204
  -0.36, // 205
  -0.18, // 206
  0.0, // 207
  0.21, // 208
  0.42, // 209
  0.62, // 210
  0.83, // 211
  1.04, // 212
  1.25, // 213
  1.46, // 214
  1.67, // 215
  1.87, // 216
  2.08, // 217
  2.29, // 218
  2.5, // 219
  2.71, // 220
  2.92, // 221
  3.12, // 222
  3.33, // 223
  3.54, // 224
  3.75, // 225
  3.96, // 226
  4.17, // 227
  4.37, // 228
  4.58, // 229
  4.79, // 230
  5.0, // 231
  5.21, // 232
  5.42, // 233
  5.62, // 234
  5.83, // 235
  6.04, // 236
  6.25, // 237
  6.46, // 238
  6.67, // 239
  6.87, // 240
  7.08, // 241
  7.29, // 242
  7.5, // 243
  7.71, // 244
  7.92, // 245
  8.12, // 246
  8.33, // 247
  8.54, // 248
  8.75, // 249
  8.96, // 250
  9.17, // 251
  9.37, // 252
  9.58, // 253
  9.79, // 254
  10.0, // 255
]

/**
 * Converts fader value (0-255) to dB value of 01V96V2
 * @param value fader value to be converted to dB
 * @returns dB value corresponding to the fader value
 */
export function value_to_db(value: number): number {
  if (value < 0) return 0 // value too low
  if (value >= dBValues.length) return dBValues[dBValues.length - 1] // value too high
  return dBValues[value]
}

/**
 * Converts dB values to the nearest fader value
 * @param db dB value to be converted to fader value
 * @returns nearest fader value to the specified dB value
 */
export function db_to_value(db: number): number {
  if (db <= dBValues[0]) return dBValues[0] // db too low
  if (db >= dBValues[dBValues.length - 1]) return dBValues.length // db too high

  let i = 1
  while (dBValues[i] < db) {
    i++
  }

  if (Math.abs(dBValues[i] - db) < Math.abs(dBValues[i - 1] - db)) {
    return i
  } else {
    return i - 1
  }
}

/**
 * Converts dB value to string with sign with specified length
 * @param db db Value to be converted
 * @param len length of the resulting string
 * @returns string with specified length
 */
export function db_to_string(db: number, len: number): string {
  let string_to_return = ''
  if (db >= 0) {
    string_to_return += '+'
  } else {
    string_to_return += '-'
  }

  string_to_return += Math.abs(db)
    .toFixed(len)
    .padEnd(len, '0')
    .slice(0, len - 1)

  if (db === 10) {
    return '+10'
  }
  if (db >= 0) {
    return string_to_return.substring(0, string_to_return.length - 1)
  }

  return string_to_return
}
